% Input variables.
metavar vars ,  a, x , y, z , w , m , o, v ::=  
indexvar ivar, n , i , k , j , l ::= 

grammar

% Cointuitionistic Logic:
R, S, T :: 'Cform_' ::=
  | 0   ::   :: 0
  | S + T ::   :: Disj
  {{tex [[S]] + [[T]] }}
  | S - T  ::   :: Subtrac
  {{tex [[S]] - [[T]] }}
  | H A     ::   :: H
  {{tex \mathsf{H}\,[[A]] }}
  | ( T )   :: M :: Parens 
  | h( T )  :: M :: HiddenParens 
  {{ tex [[T]] }}
  | S ^ n   :: M :: FormulaPower
  {{tex [[S]]^{\,[[n]]} }}
  
% Cointuitionistic (Linear) Logic:
A, B, C :: 'Bform_' ::=
  | False   ::   :: 0
  {{tex \perp }}
  | A (+) B ::   :: Par
  {{tex [[A]] \oplus [[B]] }}    
  | A *- B ::   :: LSubtrac
  {{tex [[A]] \colimp [[B]] }}
  | J S     ::   :: J
  {{tex \mathsf{J}\,[[S]] }}  
  | ( A )   :: M :: Parens 
  | h( A )  :: M :: HiddenParens 
  {{ tex [[A]] }}

% Co-intuitionistic terms:
s, t, r :: 'citerm_' ::= {{com non-linear terms }}
  | x                          :: :: Var
  | connectW to t              :: :: connectWeak
  {{tex \mathsf{connect}_w\,\mathsf{to}\,[[t]] }}
  | t1 * t2                    :: :: contra
  {{tex [[t1]] \cdot [[t2]] }}
  | false t                    :: :: Zero
  {{tex \mathsf{false}\,[[t]] }}
  | x ( t )                    :: :: VarE
  | mkc ( t , x )              :: :: mkc
  {{tex \mathsf{mkc}([[t]],[[x]]) }}
  | postp( x -> t1 , t2 )      :: :: postp
  {{tex \mathsf{postp}\,([[x]] \mapsto [[t1]], [[t2]]) }}
  | inl t                      :: :: inl
  {{tex \mathsf{inl}\,[[t]] }}
  | inr t                      :: :: inr
  {{tex \mathsf{inr}\,[[t]] }}
  | case t1 of x . t2 , y . t3 :: :: case
  {{tex \mathsf{case}\,[[t1]]\,\mathsf{of}\,[[x]].[[t2]],[[y]].[[t3]] }}
  | H e                        :: :: H
  {{tex \mathsf{H}\,[[e]] }}
  | let J x = e in t         :: :: letJ
  {{tex \mathsf{let}\,\mathsf{J}\,[[x]] = [[e]]\,\mathsf{in}\,[[t]] }}
  | let H x = t1 in t2 :: :: letH
  {{tex \mathsf{let}\,\mathsf{H}\,[[x]] = [[t1]]\,\mathsf{in}\,[[t2]] }}      
  | [ t / x ] t'               :: M :: subst
  | [ e /x ] t                 :: M :: subst2
  | ( t )                      :: S :: parens
  | h( t )                     :: M :: hparens
  {{tex [[t]] }}
  | P                          :: M :: contexts

% Co-intuitionistic linear terms:
e, u, p :: 'cilterm_' ::= {{com linear terms }}
  | x                      :: :: Var
  | connectP to e          :: :: connectPerp
  {{tex \mathsf{connect}_\perp\,\mathsf{to}\,[[e]] }}
  | postpP e               :: :: postpP
  {{tex \mathsf{postp}_\perp\,[[e]] }}
  | postp ( x -> e1 , e2 )   :: :: postp
  {{tex \mathsf{postp}\,([[x]] \mapsto [[e1]], [[e2]]) }}
  | mkc ( e , x )          :: :: mkc
  {{tex \mathsf{mkc}([[e]],[[x]]) }}
  | x ( e )                :: :: varE
  | e1 (+) e2              :: :: Par
  {{tex [[e1]] \oplus [[e2]] }}
  | casel e                :: :: casel
  {{tex \mathsf{casel}\,[[e]] }}
  | caser e                :: :: caser
  {{tex \mathsf{caser}\,[[e]] }}  
  | J t                    :: :: J
  {{tex \mathsf{J}\,[[t]] }}
  | [ e / x ] e'               :: M :: subst
  | [ t / x ] e                :: M :: subst2
  | ( e )                      :: S :: parens
  | h( e )                     :: M :: hparens
  {{tex [[e]] }}
  
% Cointuitionistic Contexts:
P {{tex \Psi}}, PI {{tex \Theta}} :: 'CG_' ::=
  | .           ::   :: Empty
  {{tex \cdot }}
  | T           ::   :: El2
  | t : T       ::   :: El
  | ( P )       :: S :: Paren
  | h( P )      :: M :: HiddenParens 
  {{ tex [[P]] }}
  | P1 , ... , Pi :: M :: vec
  | { t }         :: M :: el2
  {{tex [[t]] }}
  | [ t / x ] P   :: M :: subst
  | [ e / x ] P   :: M :: subst2
  | let H y = t in P :: M :: letH
  {{tex \mathsf{let}\,\mathsf{H}\,[[y]] = [[t]]\,\mathsf{in}\,[[P]] }}
  | P1 * P2          :: M :: comp
  | let J x = e in P         :: M :: letJ
  {{tex \mathsf{let}\,\mathsf{J}\,[[x]] = [[e]]\,\mathsf{in}\,[[P]] }}
  | case t of x . P1 , y . P2 :: M :: case
  {{tex \mathsf{case}\,[[t]]\,\mathsf{of}\,[[x]].[[P1]], [[y]].[[P2]] }}

% Cointuitionistic Contexts:
G {{tex \Gamma}}, D {{tex \Delta}} :: 'BG_' ::=
  | .           ::   :: Empty
  {{tex \cdot }}
  | A           ::   :: El2
  | e : A       ::   :: El
  | G , G'      ::   :: Ext
  | ( G )       :: S :: Paren
  | h( G )      :: M :: HiddenParens 
  {{ tex [[G]] }}
  | [ e ]         :: M :: el2
  {{tex [[e]] }}
  | [ e / x ] D :: M :: subst
  | postpP e    :: M :: postpP
  {{tex \mathsf{postp}_\perp\,[[e]] }}
  | postp ( x -> e1 , e2 )   :: :: postp
  {{tex \mathsf{postp}\,([[x]] \mapsto [[e1]], [[e2]]) }}

terminals :: '' ::=
  | F    ::  :: FunctorF
  {{tex \mathsf{F} }}
  | Gf    ::  :: FunctorG
  {{tex \mathsf{G} }}
  | Hf    ::  :: FunctorH
  {{tex \mathsf{H} }}
  | J    ::  :: FunctorJ
  {{tex \mathsf{J} }}  
  | 1    ::  :: One
  | 0    ::  :: Zero
  | []   :: :: Box  {{ tex \Box }}
  | |=   :: :: models  {{ tex \models }}
  | |-   :: :: Turnstyle  {{tex \vdash }}
  | star :: :: star   {{ tex \mathop{\star} }}
  | >>   :: :: RR   {{ tex \gg}}
  | _    :: :: Under   {{tex \Box}}
  | \    :: :: slash  {{ tex \lambda }}
  | ~>   :: :: step  {{ tex \redto }}
  | ~*>   :: :: sstep  {{ tex \redto^* }}
  | >=   :: :: succeq {{ tex \succeq }}
  | <=   :: :: preceq {{ tex \preceq }}
  | ->   :: :: rightarrow  {{ tex \rightarrow }}
  | *-   :: :: colimp  {{ tex \colimp }}  
  | <-   :: :: leftarrow  {{ tex \leftarrow }}
  | -<   :: :: Yleft  {{ tex \Yleft }}
  | ~*>  :: :: mstep  {{ tex \redto^* }}
  | =    :: :: Eq
  | ==   :: :: Equiv  {{ tex \equiv }}
  | =~   :: :: Cong  {{ tex \cong }}
  | bot  :: :: Bottom   {{ tex \mathop{\perp} }}
  | top  :: :: Top   {{ tex \top }}
  | *    :: :: Cut  {{ tex \cdot}}
  | ~    :: :: Tilde  {{tex \mathop{\sim} }}
  | \    :: :: Lam {{ tex \lambda }}
  | mu   :: :: Mu {{ tex \mu }}
  | !=   :: :: Neq {{tex \neq }}
  | FV   :: :: FV  {{ tex \mathsf{FV} }}
  | in   :: :: In {{ tex \in }}

formula :: 'formula_' ::=
  | judgement            ::   :: judgement
  | formula1 && formula2 :: M :: quad
  {{tex [[formula1]] \quad [[formula2]] }}
  | formula1 &&&& formula2 :: M :: quad2
  {{tex [[formula1]] \quad\quad\quad\quad\quad\quad\quad\quad\quad\quad\quad\quad\hspace{1px} [[formula2]] }}
  | formula1 &&& formula2 :: M :: quad3
  {{tex [[formula1]] \quad\quad\hspace{1px} [[formula2]] }}
  | formula1 &&&&& formula2 :: M :: quad4
  {{tex [[formula1]] \quad\quad\quad\quad\quad\quad [[formula2]] }}
  | formula1 &&&&&& formula2 :: M :: quad5
  {{tex [[formula1]] \quad\hspace{3px} [[formula2]] }}
  | formula1 &&&&&&& formula2 :: M :: quad7
  {{tex [[formula1]] \quad\hspace{7px} [[formula2]] }}            
  | formula1 ... formulai :: M :: vec
  | formula1 , ... , formulai :: M :: list
  | ( formula )          :: S :: parens
  {{tex [[formula]] }}
  | s : T in P           :: M :: in
  {{tex [[s]]:[[T]] \in [[P]] }}
  | e : A in D           :: M :: in2
  {{tex [[e]]:[[A]] \in [[D]] }}    
  | | P1 | = | P2 | :: M :: EraseTerms
  | | D1 | = | D2 | :: M :: EraseTerms2
  | e == e' :: :: Eqv
  | D == D' :: :: DEqv
  | WS && formula :: :: quad6
  {{tex \, \quad\quad\quad\quad\quad\quad\quad\quad\quad\hspace{4px} [[formula]] }}
  | HS :: :: hspace
  {{tex \hspace{1px} }}
  | r1 : T' in P or r2 : B in D :: M :: InOr
  {{tex [[r1]] : [[T']] \in [[P]] \text{ or } [[r2]] : [[B]] \in [[D]] }}

defns
  Jtype :: '' ::=

% Sequent Calculus:

% Co-intuitionistic Logic:
defn
 S |-C P :: :: CLog :: 'C_' 
 {{tex [[S]] \vdash_{\mathsf{C} } [[P]] }}
 by

 ------- :: id
 S |-C S

 S |-C P
 -------- :: wk
 S |-C T,P

 S |-C T,T, P
 ------------ :: cr
 S |-C T,P

 R |-C P1,S, T, P2
 ----------------- :: ex
 R |-C P1,T, S, P2

 ------- :: fL
 0 |-C P

 T1 |-C P1 && T2 |-C P2
 ---------------------- :: dL
 T1 + T2 |-C P1,P2

 R |-C P,T1
 --------------- :: dR1
 R |-C P,T1 + T2

 R |-C P,T2
 ------------- :: dR2
 R |-C P,T1+T2

 T1 |-C T2, P
 ------------- :: sL
 T1 - T2 |-C P

 S |-C P1, T1 && T2 |-C P2
 ------------------------- :: sR
 S |-C P1,P2,T1 - T2

 S |-C P1,T && T |-C P2
 ----------------------- :: cut
 S |-C P1,P2

 S |-C P,S^n && S |-C P'
 ------------------------ :: mcut
 S |-C P,P'

 A |-L . ; P
 ----------- :: hL
 H A |-C P

 T1 |-C P && T2 |-C P
 -------------------- :: adL
 T1 + T2 |-C P

% Cointuitionistic Linear Logic:
defn
 A |-L D ; P :: :: LBPLog :: 'L_' 
 {{tex [[A]] \vdash_{\mathsf{L} } [[D]] ; [[P]] }}
 by

 % Axiom:

 --------- :: id
 A |-L A;.

 % Structural Rules:

 A |-L D;P
 ----------- :: wk
 A |-L D;T,P

 A |-L D;T,T,P
 ------------- :: ctr
 A |-L D;T,P

 A |-L D1,A, B,D2;P
 -------------------- :: ex
 A |-L D1,B, A,D2;P

 A |-L D;P1,S, T,P2
 -------------------- :: Cex
 A |-L D;P1,T, S,P2

 % Cut:

 A |-L D1,B;P1 &&   B |-L D2;P2
 ------------------------------ :: cut
 A |-L D1,D2;P1,P2

 A |-L D;P1,T && T |-C P2
 ------------------------ :: Ccut
 A |-L D;P1,P2

 % Units:

 --------------- :: flL
 False |-L .;.

 A |-L D;P
 --------------- :: flR
 A |-L False,D;P

 % Additives from coPL:
 
 A |-L D;P,T1
 ----------------- :: dR1
 A |-L D;P,T1 + T2

 A |-L D;P,T2
 --------------- :: dR2
 A |-L D;P,T1+T2

 % Cotensor:

 B1 |-L D1;P1 && B2 |-L D2;P2
 ------------------------------ :: pL
 B1 (+) B2 |-L D1,D2;P1,P2

 A |-L D, B, C;P
 ------------------ :: pR
 A |-L D, B (+) C;P

 % Co-implication:
 
 B1 |-L B2, D;P
 ---------------- :: sL
 B1 *- B2 |-L D;P

 A |-L B1,D1;P1 && B2 |-L D2;P2
 ------------------------------ :: sR
 A |-L B *- C,D1,D2;P1,P2

 A |-L D;P1,T1 && T2 |-C P2
 -------------------------- :: CsR
 A |-L D;P1,P2,T1 - T2

 % Co-intuitionistic Functors:

 T |-C P
 ------------- :: jL
 J T |-L .;P

 A |-L D;T,P
 ------------- :: jR
 A |-L D,J T;P

 A |-L D,B;P
 ---------------- :: hR
 A |-L D;H B,P

 % Multi-cut:
 
 A |-L D;P,S^n && S |-C P'
 ------------------------- :: Cmcut
 A |-L D;P,P'

% Natural Deduction:
 % Non-linear side:
 defn
 S |-NC P :: :: NDC :: 'NC_'
 {{com Non-linear Natural Deduction }}
 {{tex [[S]] \vdash_{\mathsf{C} } [[P]] }}
 by

 ------- :: id
 S |-NC S

 S |-NC 0, P && S1 |-NC P1,...,Sn |-NC Pn
 -------------------------------------- :: zE
 S |-NC P,P1,...,Pn
 
 S |-NC P,T1
 --------------- :: dI1
 S |-NC P,T1 + T2

 S |-NC P,T2
 --------------- :: dI2
 S |-NC P,T1 + T2

 (S |-NC P1,T1 + T2 && T1 |-NC P2) && T2 |-NC P2
 ----------------------------------------------- :: dE
 S |-NC P1,P2

 S |-NC P1,T1 && T2 |-NC P2
 ------------------------ :: subI
 S |-NC P1,P2,T1 - T2

 S |-NC P1,T1 - T2 && T1 |-NC T2,P2
 -------------------------------- :: subE
 S |-NC P1,P2

 S |-NC P1,H A && A |-NL . ; P2
 ---------------------------- :: HE
 S |-NC P1,P2

 S |-NC P
 ---------- :: weak
 S |-NC T,P

 S |-NC T,T,P
 ------------ :: contr
 S |-NC T,P

 S |-NC P1,T && T |-NC P2
 ------------------------ :: cut
 S |-NC P1,P2

 % Non-linear side:
 defn
 A |-NL D ; P :: :: NDL :: 'NL_'
 {{com Linear Natural Deduction }}
 {{tex [[A]] \vdash_{\mathsf{L} } [[D]];[[P]] }}
 by

 ------------- :: id
 A |-NL A ; .

 A |-NL D;P
 ---------------- :: pI
 A |-NL D,False;P

 A |-NL False,D;.
 ---------------- :: pE
 A |-NL D;.

 A |-NL D,B1,B2;P
 -------------------- :: parI
 A |-NL D,B1 (+) B2;P

 (A |-NL D,B1 (+) B2;P && B1 |-NL D1;P1) && B2 |-NL D2;P2
 -------------------------------------------------------- :: parE
 A |-NL D,D1,D2;P,P1,P2

 A |-NL D1,B1;P1 && B2 |-NL D2;P2
 --------------------------------- :: subI
 A |-NL B1 *- B2,D1,D2;P1,P2

 A |-NL D1,B1 *- B2; P1 && B1 |-NL B1,D2;P2
 ----------------------------------------- :: subE
 A |-NL D1,D2;P1,P2

 A |-NL D;T,P
 -------------- :: JI
 A |-NL D,J T;P

 A |-NL D,J T;P1 && T |-NC P2
 ---------------------------- :: JE
 A |-NL D;P1,P2

 A |-NL D,B;P
 -------------- :: HI
 A |-NL D;H B,P

 A |-NL D;P1,H A && A |-NL .;P2
 ----------------------------- :: HE
 A |-NL D;P1,P2

 A |-NL D;P
 ------------ :: weak
 A |-NL D;T,P

 A |-NL D;T,T,P
 -------------- :: contr
 A |-NL D;T,P

 A |-NL D;P1,T && T |-NC P2
 -------------------------- :: Ccut
 A |-NL D;P1,P2

 A |-NL D1,B;P1 && B |-NL D2;P2
 ------------------------------ :: cut
 A |-NL D1,D2;P1,P2

% Term Assignment:

defn
  x : S |-TC P :: :: tac :: TC_
  {{tex [[x]] : [[S]] \vdash_{\mathsf{C} } [[P]] }}
by

  ---------------- :: id
  x : S |-TC x : S

  x : S |-TC t : 0, P && x1 : S1 |-TC P1,...,xn : Sn |-TC Pn
  ---------------------------------------------------------- :: zI
  x : S |-TC P,[false t/x1]P1,...,[false t/xn]Pn

 x : S |-TC P,t : T1
 ------------------------ :: dI1
 x : S |-TC P,inl t : T1 + T2

 x : S |-TC P,t : T2
 ------------------------ :: dI2
 x : S |-TC P,inr t : T1 + T2

 ((x : S |-TC P1,t : T1 + T2 && y : T1 |-TC P2) && z : T2 |-TC P3) && |P2| = |P3|
 -------------------------------------------------------------------------------- :: dE
 x : S |-TC P1,case t of y.P2,z.P3

 x : S |-TC P1,t : T1 && y : T2 |-TC P2
 -------------------------------------------- :: subI
 x : S |-TC P1,mkc(t,y) : T1 - T2, [y(t)/y]P2

 x : S |-TC P1,s : T1 - T2 && y : T1 |-TC t : T2,P2
 -------------------------------------------------- :: subE
 x : S |-TC P1,{postp(y -> t,s)}, [y(s)/y]P2

 (x : S |-TC P1,t : H A && y : A |-TL . ; P2) && |P1| = |P2|
 ----------------------------------------------------------- :: HE
 x : S |-TC P1 * (let H y = t in P2)

 x : S |-TC P && s : T' in P
 --------------------------- :: weak
 x : S |-TC connectW to s : T,P

 x : S |-TC t1 : T,t2 : T,P
 -------------------------- :: contr
 x : S |-TC (t1 * t2) : T,P

 x : S |-TC P1,t : T && y : T |-TC P2
 ------------------------------------ :: cut
 x : S |-TC P1,[t/y]P2

defn
  x : A |-TL D ; P :: :: tal :: TL_
  {{tex [[x]] : [[A]] \vdash_{\mathsf{L} } [[D]];[[P]] }}
by

 -------------------- :: id
 x : A |-TL x : A ; .

 x : A |-TL D;P && e : B in D
 ------------------------------------ :: pI
 x : A |-TL D,connectP to e : False;P

 x : A |-TL e : False,D;.
 ------------------------ :: pE
 x : A |-TL postpP e,D;.

 x : A |-TL D,e1 : B1,e2 : B2;P
 ------------------------------------ :: parI
 x : A |-TL D,e1 (+) e2 : B1 (+) B2;P

 (x : A |-TL D,e : B1 (+) B2;P && y : B1 |-TL D1;P1) && z : B2 |-TL D2;P2
 -------------------------------------------------------------------------- :: parE
 x : A |-TL D,[casel(e)/y]D1,[caser(e)/z]D2;P,[casel(e)/y]P1,[caser(e)/z]P2

 x : A |-TL D1,e : B1;P1 && y : B2 |-TL D2;P2
 ---------------------------------------------------------- :: subI
 x : A |-TL mkc(e,y) : B1 *- B2,D1,[y(e)/y]D2;P1,[y(e)/y]P2

 x : A |-TL D1,e1 : B1 *- B2; P1 && y : B1 |-TL e2 : B1,D2;P2
 ------------------------------------------------------------ :: subE
 x : A |-TL D1,postp(y -> e2,e1),D2;P1,P2

 x : A |-TL D;t : T,P
 ------------------------ :: JI
 x : A |-TL D,J t : J T;P

 x : A |-TL D,e : J T;P1 && y : T |-TC P2
 ---------------------------------------- :: JE
 x : A |-TL D;P1,let J y = e in P2

 x : A |-TL D,e : B;P
 ------------------------ :: HI
 x : A |-TL D;H e : H B,P

 x : A |-TL D;P1,t : H A && y : A |-TL .;P2
 ------------------------------------------ :: HE
 x : A |-TL D;P1,let H y = t in P2

 x : A |-TL D;P && r : T' in P or r : B in D
 ------------------------------------------- :: weak
 x : A |-TL D;connectW to r : T,P

 x : A |-TL D;t1 : T,t2 : T,P
 ---------------------------- :: contr
 x : A |-TL D;t1 * t2 : T,P

 x : A |-TL D;P1,t : T && y : T |-TC P2
 -------------------------------------- :: Ccut
 x : A |-TL D;P1,[t/y]P2

 x : A |-TL D1,e : B;P1 && y : B |-TL D2;P2
 ----------------------------------------- :: cut
 x : A |-TL D1,[e/y]D2;P1,[e/y]P2